# Orthanc PhotoTrack
# Copyright (C) 2014 - Gregory Art, Jean-Francois Colson, Benjamin
# Golinvaux, Sebastien Jodogne
#
# This program is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License
# as published by the Free Software Foundation, either version 3 of
# the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.


set(ALLOW_DOWNLOADS ON)
include(${CMAKE_SOURCE_DIR}/CMake/DownloadPackage.cmake)

if (on)
  # Use a specific version of Orthanc
  set(ORTHANC_ROOT ${CMAKE_BINARY_DIR}/Orthanc-0.8.1)
  DownloadPackage(
    "8976f24029950afaac1283a7eb2380e7"
    "http://www.montefiore.ulg.ac.be/~jodogne/private/MIC/Orthanc-0.8.1.tar.gz"
    "${ORTHANC_ROOT}")

else()
  # Use Orthanc mainline
  message(STATUS "Cloning the Orthanc mainline using Mercurial...")
  set(ORTHANC_ROOT ${CMAKE_BINARY_DIR}/Orthanc)
  execute_process(
    #COMMAND hg clone /home/jodogne/Subversion/Orthanc Orthanc
    COMMAND hg clone https://code.google.com/p/orthanc/ Orthanc
    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
    )
endif()

# Configuration of the Orthanc build
set(STATIC_BUILD ON)
set(STANDALONE_BUILD ON)

# Some basic inclusions
include(CheckIncludeFiles)
include(CheckIncludeFileCXX)
include(CheckLibraryExists)
include(${ORTHANC_ROOT}/Resources/CMake/Compiler.cmake)
#include(${ORTHANC_ROOT}/Resources/CMake/AutoGeneratedCode.cmake)
include(${ORTHANC_ROOT}/Resources/CMake/VisualStudioPrecompiledHeaders.cmake)

# Configuration of third-party packages
include(${ORTHANC_ROOT}/Resources/CMake/GoogleLogConfiguration.cmake)
include(${ORTHANC_ROOT}/Resources/CMake/GoogleTestConfiguration.cmake)
include(${ORTHANC_ROOT}/Resources/CMake/BoostConfiguration.cmake)
#include(${ORTHANC_ROOT}/Resources/CMake/DcmtkConfiguration.cmake)
include(${ORTHANC_ROOT}/Resources/CMake/MongooseConfiguration.cmake)
include(${ORTHANC_ROOT}/Resources/CMake/ZlibConfiguration.cmake)
include(${ORTHANC_ROOT}/Resources/CMake/SQLiteConfiguration.cmake)
include(${ORTHANC_ROOT}/Resources/CMake/JsonCppConfiguration.cmake)
include(${ORTHANC_ROOT}/Resources/CMake/LibPngConfiguration.cmake)
#include(${ORTHANC_ROOT}/Resources/CMake/LuaConfiguration.cmake)
include(${ORTHANC_ROOT}/Resources/CMake/LibCurlConfiguration.cmake)
include(${ORTHANC_ROOT}/Resources/CMake/PlustacheConfiguration.cmake)
include(${ORTHANC_ROOT}/Resources/CMake/PugixmlConfiguration.cmake)  # Only Orthanc > 0.8.0

set(ORTHANC_CORE_SOURCES
  #${ORTHANC_ROOT}/Core/Cache/MemoryCache.cpp
  ${ORTHANC_ROOT}/Core/ChunkedBuffer.cpp
  ${ORTHANC_ROOT}/Core/Compression/BufferCompressor.cpp
  ${ORTHANC_ROOT}/Core/Compression/HierarchicalZipWriter.cpp
  ${ORTHANC_ROOT}/Core/Compression/ZipWriter.cpp
  ${ORTHANC_ROOT}/Core/Compression/ZlibCompressor.cpp
  #${ORTHANC_ROOT}/Core/DicomFormat/DicomArray.cpp
  #${ORTHANC_ROOT}/Core/DicomFormat/DicomImageInformation.cpp
  #${ORTHANC_ROOT}/Core/DicomFormat/DicomInstanceHasher.cpp
  #${ORTHANC_ROOT}/Core/DicomFormat/DicomIntegerPixelAccessor.cpp
  #${ORTHANC_ROOT}/Core/DicomFormat/DicomMap.cpp
  #${ORTHANC_ROOT}/Core/DicomFormat/DicomTag.cpp
  ${ORTHANC_ROOT}/Core/Enumerations.cpp
  ${ORTHANC_ROOT}/Core/FileStorage/CompressedFileStorageAccessor.cpp
  ${ORTHANC_ROOT}/Core/FileStorage/FileStorage.cpp
  ${ORTHANC_ROOT}/Core/FileStorage/FileStorageAccessor.cpp
  ${ORTHANC_ROOT}/Core/FileStorage/StorageAccessor.cpp
  ${ORTHANC_ROOT}/Core/HttpClient.cpp
  #${ORTHANC_ROOT}/Core/HttpServer/EmbeddedResourceHttpHandler.cpp
  ${ORTHANC_ROOT}/Core/HttpServer/FilesystemHttpHandler.cpp
  ${ORTHANC_ROOT}/Core/HttpServer/FilesystemHttpSender.cpp
  ${ORTHANC_ROOT}/Core/HttpServer/HttpFileSender.cpp
  ${ORTHANC_ROOT}/Core/HttpServer/HttpHandler.cpp
  ${ORTHANC_ROOT}/Core/HttpServer/HttpOutput.cpp
  ${ORTHANC_ROOT}/Core/HttpServer/MongooseServer.cpp
  ${ORTHANC_ROOT}/Core/ImageFormats/ImageAccessor.cpp
  ${ORTHANC_ROOT}/Core/ImageFormats/ImageBuffer.cpp
  ${ORTHANC_ROOT}/Core/ImageFormats/ImageProcessing.cpp
  ${ORTHANC_ROOT}/Core/ImageFormats/PngReader.cpp
  ${ORTHANC_ROOT}/Core/ImageFormats/PngWriter.cpp
  #${ORTHANC_ROOT}/Core/Lua/LuaContext.cpp
  #${ORTHANC_ROOT}/Core/Lua/LuaFunctionCall.cpp
  ${ORTHANC_ROOT}/Core/MultiThreading/ArrayFilledByThreads.cpp
  ${ORTHANC_ROOT}/Core/MultiThreading/BagOfRunnablesBySteps.cpp
  ${ORTHANC_ROOT}/Core/MultiThreading/Mutex.cpp
  ${ORTHANC_ROOT}/Core/MultiThreading/ReaderWriterLock.cpp
  ${ORTHANC_ROOT}/Core/MultiThreading/Semaphore.cpp
  ${ORTHANC_ROOT}/Core/MultiThreading/SharedMessageQueue.cpp
  ${ORTHANC_ROOT}/Core/MultiThreading/ThreadedCommandProcessor.cpp
  ${ORTHANC_ROOT}/Core/OrthancException.cpp
  ${ORTHANC_ROOT}/Core/RestApi/RestApi.cpp
  ${ORTHANC_ROOT}/Core/RestApi/RestApiCall.cpp
  ${ORTHANC_ROOT}/Core/RestApi/RestApiGetCall.cpp
  ${ORTHANC_ROOT}/Core/RestApi/RestApiHierarchy.cpp
  ${ORTHANC_ROOT}/Core/RestApi/RestApiOutput.cpp
  ${ORTHANC_ROOT}/Core/RestApi/RestApiPath.cpp
  ${ORTHANC_ROOT}/Core/SQLite/Connection.cpp
  ${ORTHANC_ROOT}/Core/SQLite/FunctionContext.cpp
  ${ORTHANC_ROOT}/Core/SQLite/Statement.cpp
  ${ORTHANC_ROOT}/Core/SQLite/StatementId.cpp
  ${ORTHANC_ROOT}/Core/SQLite/StatementReference.cpp
  ${ORTHANC_ROOT}/Core/SQLite/Transaction.cpp
  ${ORTHANC_ROOT}/Core/Toolbox.cpp
  ${ORTHANC_ROOT}/Core/Uuid.cpp
  )

# Setup precompiled headers for Microsoft Visual Studio
if (${MSVC})
  add_definitions(-DORTHANC_USE_PRECOMPILED_HEADERS=1)

  ADD_VISUAL_STUDIO_PRECOMPILED_HEADERS(
    "PrecompiledHeaders.h" "${ORTHANC_ROOT}/Core/PrecompiledHeaders.cpp" ORTHANC_CORE_SOURCES)
endif()


include_directories(
  ${ORTHANC_ROOT}
  ${ORTHANC_ROOT}/OrthancCppClient/SharedLibrary/Laaw
  )

add_definitions(
  -DORTHANC_SSL_ENABLED=0
  )

add_library(OrthancCore
  STATIC
  ${AUTOGENERATED_SOURCES}
  ${THIRD_PARTY_SOURCES}
  ${CURL_SOURCES}
  ${ORTHANC_CORE_SOURCES}
  ${ORTHANC_ROOT}/Resources/ThirdParty/md5/md5.c
  ${ORTHANC_ROOT}/Resources/ThirdParty/base64/base64.cpp
  )  
